openapi: 3.0.0
info:
  contact:
    name: Apigee Devrel
    url: https://github.com/apigee/devrel
  description: >-
    API for managing recipes, including creating, retrieving, updating, and
    deleting recipe resources.  This API allows users to manage recipes.
  title: Recipe Management API
  version: 1.0.0
servers:
  - url: https://httpbin.org/anything
paths:
  /recipes:
    get:
      description: Retrieve a list of all available recipes.
      operationId: getRecipes
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Recipe"
                type: array
          description: A list of recipes.
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal Server Error
      summary: Retrieve a list of recipes
      tags:
        - recipes
    post:
      description: Endpoint to create a new recipe.
      operationId: createRecipe
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecipeCreate"
        description: Recipe object to be created
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Recipe"
          description: Successful recipe creation
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad Request
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal Server Error
      summary: Create a new recipe
      tags:
        - recipes
  /recipes/{recipeId}:
    delete:
      description: Deletes a recipe based on the provided ID.
      operationId: deleteRecipe
      parameters:
        - description: The ID of the recipe to delete
          in: path
          name: recipeId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Recipe deleted successfully
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Recipe not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal Server Error
      summary: Delete a recipe by its ID
      tags:
        - recipes
    get:
      description: Retrieve a specific recipe by its ID
      operationId: getRecipeById
      parameters:
        - description: The ID of the recipe to retrieve
          in: path
          name: recipeId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Recipe"
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Recipe not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal Server Error
      summary: Retrieve a specific recipe by its ID
      tags:
        - recipes
    parameters:
      - in: path
        name: recipeId
        required: true
        schema:
          type: string
    put:
      description: Update an existing recipe by its ID
      operationId: updateRecipe
      parameters:
        - description: The ID of the recipe to update
          in: path
          name: recipeId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecipeCreate"
        description: Recipe object to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Recipe"
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Invalid ID supplied
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Recipe not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal server error
      summary: Update an existing recipe by its ID
      tags:
        - recipes
  /recipes/{recipeId}/nutritionalInformation:
    get:
      description: Retrieves the nutritional information for a recipe, given its ID.
      operationId: getRecipeNutritionalInformation
      parameters:
        - description: The ID of the recipe to retrieve nutritional information for.
          in: path
          name: recipeId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NutritionalInformation"
          description: Successful operation
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Bad Request
        "404":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Recipe not found
        "500":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
          description: Internal Server Error
      summary: Retrieve nutritional information for a specific recipe
      tags:
        - recipes
    parameters:
      - in: path
        name: recipeId
        required: true
        schema:
          type: string
components:
  schemas:
    Error:
      description: Schema for error responses.
      properties:
        code:
          description: Error code.
          type: string
        message:
          description: Error message.
          type: string
      required:
        - code
        - message
      type: object
    NutritionalInformation:
      description: Nutritional information for a recipe.
      properties:
        calories:
          description: Number of calories.
          type: integer
        carbohydrates:
          description: Amount of carbohydrates in grams.
          format: float
          type: number
        fats:
          description: Amount of fats in grams.
          format: float
          type: number
        protein:
          description: Amount of protein in grams.
          format: float
          type: number
      required:
        - calories
        - carbohydrates
        - fats
        - protein
      type: object
    Recipe:
      description: Recipe object containing details of a recipe.
      properties:
        authorId:
          description: The ID of the recipe author.
          type: string
        cookingTime:
          description: Estimated cooking time in minutes.
          type: integer
        ingredients:
          description: A list of ingredients required for the recipe.
          items:
            type: string
          type: array
        instructions:
          description: Detailed cooking instructions.
          type: string
        nutritionalInformation:
          $ref: "#/components/schemas/NutritionalInformation"
        photos:
          description: An array of URLs to high-quality photos.
          items:
            format: url
            type: string
          type: array
        recipeId:
          description: Unique identifier for the recipe.
          type: string
        title:
          description: Title of the recipe.
          type: string
      required:
        - recipeId
        - title
        - authorId
        - cookingTime
        - ingredients
        - instructions
        - nutritionalInformation
        - photos
      type: object
    RecipeCreate:
      description: Schema for creating a new recipe.
      properties:
        authorId:
          description: The ID of the recipe author.
          type: string
        cookingTime:
          description: Estimated cooking time in minutes.
          type: integer
        ingredients:
          description: A list of ingredients required for the recipe.
          items:
            type: string
          type: array
        instructions:
          description: Detailed cooking instructions.
          type: string
        nutritionalInformation:
          description: Nutritional information for the recipe.
          properties:
            calories:
              description: Number of calories.
              type: integer
            carbohydrates:
              description: Amount of carbohydrates in grams.
              type: number
            fats:
              description: Amount of fats in grams.
              type: number
            protein:
              description: Amount of protein in grams.
              type: number
          required:
            - calories
            - carbohydrates
            - fats
            - protein
          type: object
        photos:
          description: An array of URLs to high-quality photos.
          items:
            format: url
            type: string
          type: array
        title:
          description: Title of the recipe.
          type: string
      required:
        - authorId
        - title
        - cookingTime
        - ingredients
        - instructions
        - nutritionalInformation
        - photos
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: x-api-key
      type: apiKey
